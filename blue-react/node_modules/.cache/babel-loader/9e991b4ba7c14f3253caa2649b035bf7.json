{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AaronJ\\\\Desktop\\\\teamGit\\\\blue-react\\\\src\\\\geolocation\\\\GetLocation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GetLocation() {\n  _s();\n\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [status, setStatus] = useState(null);\n\n  const getLocation = () => {\n    if (!navigator.geolocation) {\n      setStatus('Geolocation is not supported by your browser');\n    } else {\n      setStatus('Locating...');\n      navigator.geolocation.getCurrentPosition(position => {\n        setStatus(null);\n        setLat(position.coords.latitude);\n        setLng(position.coords.longitude);\n      }, () => {\n        setStatus('Unable to retrieve your location');\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      sm: \"12\",\n      md: {\n        size: 6,\n        offset: 3\n      },\n      children: \".col-sm-12 .col-md-6 .offset-md-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getLocation,\n      children: \"Get Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Coordinates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), lat && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Latitude: \", lat]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), lng && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Longitude: \", lng]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GetLocation, \"hE8zokPMCLWpC8jNhVBxs8GN+Js=\");\n\n_c = GetLocation;\nexport default GetLocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetLocation\");","map":{"version":3,"sources":["C:/Users/AaronJ/Desktop/teamGit/blue-react/src/geolocation/GetLocation.js"],"names":["React","useState","Container","Row","Col","GetLocation","lat","setLat","lng","setLng","status","setStatus","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","size","offset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAmC,YAAnC;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAEnB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMW,WAAW,GAAG,MAAM;AACtB,QAAI,CAACC,SAAS,CAACC,WAAf,EAA4B;AAC5BH,MAAAA,SAAS,CAAC,8CAAD,CAAT;AACC,KAFD,MAEO;AACPA,MAAAA,SAAS,CAAC,aAAD,CAAT;AACAE,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACnDL,QAAAA,SAAS,CAAC,IAAD,CAAT;AACAJ,QAAAA,MAAM,CAACS,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAAN;AACAT,QAAAA,MAAM,CAACO,QAAQ,CAACC,MAAT,CAAgBE,SAAjB,CAAN;AACH,OAJD,EAIG,MAAM;AACLR,QAAAA,SAAS,CAAC,kCAAD,CAAT;AACH,OAND;AAOC;AACJ,GAbD;;AAeA,sBACI;AAAA,4BACA,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,EAAE,EAAE;AAAES,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,MAAM,EAAE;AAAnB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAET,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAA,gBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJA,EAKCJ,GAAG,iBAAI;AAAA,+BAAcA,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YALR,EAMCE,GAAG,iBAAI;AAAA,gCAAeA,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YANR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAhCQH,W;;KAAAA,W;AAkCT,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Row, Col} from 'reactstrap';\r\n\r\nfunction GetLocation() {\r\n\r\n    const [lat, setLat] = useState(null);\r\n    const [lng, setLng] = useState(null);\r\n    const [status, setStatus] = useState(null);\r\n\r\n    const getLocation = () => {\r\n        if (!navigator.geolocation) {\r\n        setStatus('Geolocation is not supported by your browser');\r\n        } else {\r\n        setStatus('Locating...');\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            setStatus(null);\r\n            setLat(position.coords.latitude);\r\n            setLng(position.coords.longitude);\r\n        }, () => {\r\n            setStatus('Unable to retrieve your location');\r\n        });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>.col-sm-12 .col-md-6 .offset-md-3</Col>       \r\n        <button onClick={getLocation}>Get Location</button>\r\n        <h1>Coordinates</h1>\r\n        <p>{status}</p>\r\n        {lat && <p>Latitude: {lat}</p>}\r\n        {lng && <p>Longitude: {lng}</p>}\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GetLocation;"]},"metadata":{},"sourceType":"module"}